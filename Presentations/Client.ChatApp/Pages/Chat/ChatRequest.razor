@page "/Chats/Requests"
@using Client.ChatApp.Constants
@using Shared.Server.Models.Results

<div class="chat-requests">
    <div class="header center">
        <button class="header-btn @(IsTabSelected(ChatRequestTab.Report))" @onclick="()=> ChangeTab(ChatRequestTab.Report)">گزارشات</button>
        <button class="header-btn @(IsTabSelected(ChatRequestTab.Sent))" @onclick="()=> ChangeTab(ChatRequestTab.Sent)">ارسال شده ها</button>
        <button class="header-btn @(IsTabSelected(ChatRequestTab.Received))" @onclick="()=> ChangeTab(ChatRequestTab.Received)">دریافت شده ها</button>
    </div>
    <div class="request-search">
        <button class="search-btn center">S</button>
        <input class="search-input" />       
    </div>
    <div class="request-items">      
        @foreach(var item in GetItems()) {
            <div class="request-item center  mt-2">
                <div class="item-logo"></div>
                <div class="item-info center">
                    <div class="item-name">@item.DisplayName</div>
                    <div class="item-footer">
                        <div class="item-history center-end">@item.SentAt</div>
                        <div class="item-controls">
                            <button class="item-btn">1</button>
                            @if(_currentTab == ChatRequestTab.Received) {
                                <button class="item-btn">2</button>
                                <button class="item-btn">3</button>
                            }    
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@code {

    private LinkedList<ChatRequestItem> ReceiveItems = new();
    private LinkedList<ChatRequestItem> SendItems = new();
    private ChatRequestTab _currentTab = ChatRequestTab.Received;
    private LinkedList<ChatRequestItem> GetItems() {
        if(_currentTab == ChatRequestTab.Sent) {
            return SendItems;
        }
        if(_currentTab == ChatRequestTab.Received) {
            return ReceiveItems;
        }
        return new();
    }

    private void ChangeTab(ChatRequestTab tab) {
        _currentTab = tab;
    }
    private string IsTabSelected(ChatRequestTab tab) => _currentTab == tab ? "selected" : "";

    protected override void OnInitialized() {
        CreateReceiveItems();
        CreateSendItems();
    }

    private void CreateReceiveItems() {
        ReceiveItems.AddLast(new ChatRequestItem(Guid.NewGuid(), "Ali1", DateTime.UtcNow));
        ReceiveItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Ali2" , DateTime.UtcNow));
        ReceiveItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Ali2" , DateTime.UtcNow));
        ReceiveItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Ali3" , DateTime.UtcNow));
    }

    private void CreateSendItems() {
        SendItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Masoud1" , DateTime.UtcNow));
        SendItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Masoud2" , DateTime.UtcNow));
        SendItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Masoud3" , DateTime.UtcNow));
        SendItems.AddLast(new ChatRequestItem(Guid.NewGuid() , "Masoud4" , DateTime.UtcNow));
    }

}
